Requirement: Show all lessons per month
Solution:
select count(*)individual 
from lesson_record 
where date between '2021-02-01' and '2021-02-28'


Requirement: Show all lessons during a month, depending on type
Solution:
select count(id), type
from lesson_record
where date between '2021-05-01' and '2021-05-30'
group by type


Requirement: Retrieve the average number of lessons per month during the entire year.
Solution: 	
select count(*)/12.0
from lesson_record
where date between '2021-02-01' and '2022-02-01'

Requirement: List all instructors who has given more than a specific number of lessons during the current month. Sum all lessons, independent of type, and sort the result by the number of given lessons.
Solution: 	
create view instructors_working_too_much as 
select count(instructor_id), instructor_id 
from lesson_record 
where date between '2021-02-01' and '2021-02-28' 
group by instructor_id having count(*) > 2 
order by count(*) ASC


Requirement: List all ensembles held during the next week, sorted by music genre and weekday. For each ensemble tell whether it's full booked, has 1-2 seats left or has more seats left. Hint: you might want to use a CASE statement in your query to produce the desired output.
Solution:

SELECT , CASE 
WHEN (SELECT COUNT(*) FROM student_ensemble WHERE ensemble_id = ensemble.id) = maximum_number_of_students THEN 'Fully booked'
WHEN maximum_number_of_students - (SELECT COUNT(*) FROM student_ensemble WHERE ensemble_id = ensemble.id) > 0
AND maximum_number_of_students - (SELECT COUNT(*) FROM student_ensemble WHERE ensemble_id = ensemble.id) < 3 THEN '1-2 Places left'
WHEN maximum_number_of_students - (SELECT COUNT(*) FROM student_ensemble WHERE ensemble_id = ensemble.id) > 2 THEN 'More than 2 places left'
END places
FROM ensemble WHERE date BETWEEN (SELECT date_trunc('week', CURRENT_DATE + integer '7')) AND (SELECT date_trunc('week', CURRENT_DATE + integer '14')) ORDER BY genre ASC, date ASC;

